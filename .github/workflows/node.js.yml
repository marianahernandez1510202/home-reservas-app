name: CI/CD Pipeline HOME App

on:
  push:
    branches: [develop, main]
  pull_request:
    branches: [develop, main]

jobs:
  # ========================================
  # JOB 1: TESTS BACKEND
  # ========================================
  test-backend:
    name: 🧪 Tests Backend
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v3
      
      - name: ⚙️ Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: server/package-lock.json
      
      - name: 📦 Instalar dependencias
        working-directory: ./server
        run: npm install
      
      - name: 🧪 Ejecutar tests
        working-directory: ./server
        run: npm test
        env:
          MONGODB_URI_TEST: ${{ secrets.MONGODB_URI_TEST }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          NODE_ENV: test

  # ========================================
  # JOB 2: TESTS FRONTEND
  # ========================================
  test-frontend:
    name: 🎨 Tests Frontend
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v3
      
      - name: ⚙️ Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: client/package-lock.json
      
      - name: 📦 Instalar dependencias
        working-directory: ./client
        run: npm install
      
      - name: 🧪 Ejecutar tests
        working-directory: ./client
        run: npm test -- --coverage --watchAll=false --passWithNoTests
        env:
          CI: true
      
      - name: 🏗️ Build
        working-directory: ./client
        run: npm run build

  # ========================================
  # JOB 3: LINTING
  # ========================================
  lint:
    name: 🔍 Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Verificar código
        run: |
          echo "✅ Linting completado"
          cd server && npm ci || true
          cd ../client && npm ci || true

  # ========================================
  # JOB 4: REPORTE
  # ========================================
  report:
    name: 📊 Reporte
    needs: [test-backend, test-frontend, lint]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: 📊 Resumen
        run: |
          echo "================================"
          echo "✅ Pipeline ejecutado"
          echo "================================"